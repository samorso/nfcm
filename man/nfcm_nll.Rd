% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/likelihood.R
\name{nfcm_nll}
\alias{nfcm_nll}
\alias{nfcm_grad_nll}
\alias{nfcm_aic}
\alias{nfcm_bic}
\title{Negative approximate log-likelihood of Spline Based Nonlinear Factor Copula Model}
\usage{
nfcm_nll(lambda, w, type = "b", splines_control = splines.control())

nfcm_grad_nll(lambda, w, type = "b", splines_control = splines.control())

nfcm_aic(x, w, type = "b", splines_control = splines.control())

nfcm_bic(x, w, type = "b", splines_control = splines.control())
}
\arguments{
\item{lambda}{vector of spline coefficients (\eqn{\Lambda} vectorized).}

\item{w}{uniform(0,1) \eqn{n\times N} \code{matrix} of observations.}

\item{type}{specify spline basis, either \code{"b"} (default), 
\code{"c"}, \code{"i"} or \code{"m"};}

\item{splines_control}{control (see \code{\link{splines.control}}).}
}
\value{
The approximate negative log-likelihood divided by \eqn{n} and \eqn{N}.

The gradient of the approximate negative log-likelihood divided by \eqn{n} and \eqn{N}.

Akaike information criterion

Bayesian information criterion
}
\description{
Compute an upper bound of the negative log-likelihood for a bivariate model. 
It is defined 
as \deqn{\frac{1}{n}\frac{1}{N}\sum_{i=1}^n\sum_{j=1}^N\Phi^\top\Lambda \psi'(w_{ij}),}
where \eqn{\psi'} is the first derivative of a spline basis \eqn{\psi},
\eqn{\Lambda} is a matrix of spline coefficients and \eqn{\Phi} is 
defined as \deqn{\int_0^1\psi(u)du.} It is assumed that the variables have a
positive quadrant dependence.
}
